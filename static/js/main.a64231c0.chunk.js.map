{"version":3,"sources":["commonComponents/button/Button.js","components/horizontalCard/HorizontalCard.js","components/searchResultsContainer/ReposList.js","cms/CMS.js","commonComponents/spinner/Spinner.js","components/search/SearchInput.js","commonComponents/ErrorMessaging/ErrorMessaging.js","queries/Queries.js","components/handleMore/HandleMore.js","components/header/Header.js","pages/searchPage/SearchPage.js","UtilityFunctions/Utils.js","App.js","constants/Constants.js","api/Auth.js","UtilityFunctions/ErrorBoundary.js","index.js"],"names":["Button","props","events","data","text","theme","buttonSize","options","onClick","className","HorizontalCard","repo","src","owner","avatarUrl","alt","login","href","url","target","name","stargazerCount","description","languages","nodes","map","lang","index","ReposList","list","item","node","CMS","Spinner","SearchInput","onSearch","useState","searchText","setSearchText","type","value","aria-label","placeholder","onChange","event","ErrorMessaging","Queries","GET_REPOSITORIES","gql","HandleMore","moreItems","isNextPageExists","Fragment","Header","SearchPage","searchLimit","useQuery","variables","repositoryName","limit","loading","error","fetchMore","str","updateQuery","prev","fetchMoreResult","Utils","search","edges","length","afterpoint","after","Object","assign","pageInfo","endCursor","hasNextPage","App","Constants","httpLink","HttpLink","uri","authMiddleware","ApolloLink","operation","forward","setContext","headers","authorization","client","ApolloClient","cache","InMemoryCache","link","from","ErrorBoundary","state","errorInfo","this","setState","style","whiteSpace","toString","componentStack","children","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a64231c0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Button.scss\";\r\n\r\nconst Button = (props) => {\r\n  const {events} = props;\r\n  const {text, theme} = props?.data;\r\n  const {buttonSize} = props?.options;\r\n  return (\r\n    <button\r\n      onClick={events} \r\n      className={`${buttonSize ==='big' ? 'big-button' : 'button'} ${theme}`}\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport \"./HorizontalCard.scss\";\r\n\r\nconst HorizontalCard = ({ repo }) => {\r\n  return (\r\n    <div className=\"repo-unit\">\r\n      <div className='repo-unit__left-section'>\r\n        <img className=\"avatar\" src={repo.owner.avatarUrl} alt=\"avatar\"/>\r\n        <div className=\"repo-unit__header__owner\">{repo.owner.login}</div>\r\n      </div>\r\n      <div className='repo-unit__right-section'>\r\n        <div className=\"repo-unit__top-section\">\r\n          <a\r\n            href={repo.url}\r\n            target=\"_blank\"\r\n            className=\"repo-unit__header__repo-name\"\r\n          >\r\n            {repo.name}\r\n          </a>\r\n          \r\n            <div className=\"repo-unit__top-section__stars-count\">\r\n              <p>&#11088; {repo.stargazerCount}</p>\r\n            </div>\r\n        </div>\r\n        <div className=\"repo-unit__content\">\r\n          <p>{repo.description}</p>\r\n        </div>\r\n        <div className=\"repo-unit__languages\">\r\n          {repo?.languages.nodes && repo.languages.nodes.map((lang, index)=>{\r\n            return <span key={index}>{lang.name}</span>\r\n            })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HorizontalCard;","import React from \"react\";\r\nimport HorizontalCard from \"../horizontalCard/HorizontalCard\";\r\nimport \"./ReposList.scss\";\r\n\r\nconst ReposList = ({ list }) => {\r\n  return (\r\n    <div className=\"repo-section\">\r\n      {\r\n        <>\r\n          {list.map((item, index) => (\r\n            <>\r\n              <HorizontalCard key={index} repo={item.node} />\r\n              <hr />\r\n            </>\r\n          ))}\r\n        </>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReposList;\r\n","export const CMS = {\r\n    searchRepos: 'Search Repos',\r\n    search: 'Search',\r\n    loadMoreRepos: 'Load More Repositories',\r\n    loading: 'Loading.....',\r\n};","import React from \"react\";\r\nimport './Spinner.scss';\r\nimport { CMS } from '../../cms/CMS';\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"spinner-position\">\r\n      <div className=\"spinner\"/>\r\n      <p>{CMS.loading}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"../../commonComponents/button/Button\";\r\nimport \"./SearchInput.scss\";\r\n\r\nconst SearchInput = ({ onSearch }) => {\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  return (\r\n    <div className=\"search-container\">\r\n      <input\r\n        type=\"search\"\r\n        name=\"searchText\"\r\n        value={searchText}\r\n        className=\"search-container__search-input\"\r\n        aria-label=\"search\"\r\n        placeholder=\"Enter Repository name..\"\r\n        onChange={(event) => setSearchText(event.target.value)}\r\n      />\r\n      <Button \r\n        events={() => onSearch(searchText)}\r\n        data={{\r\n          theme:\"light\",\r\n          text:\"Search\"\r\n        }}\r\n        options={{\r\n            buttonSize:\"small\"\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import React from \"react\";\r\nimport \"./ErrorMessaging.scss\";\r\n\r\nconst ErrorMessaging = ({ text }) => {\r\n  return (\r\n    <>\r\n    {!!text&&\r\n      <p className=\"error-position\">{text}</p>\r\n    }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ErrorMessaging;\r\n","import { gql, useQuery } from \"@apollo/client\";\r\nexport const Queries = {\r\n    GET_REPOSITORIES: gql`\r\n    query getRepos(\r\n      $repositoryName: String!\r\n      $after: String\r\n      $limit: Int!\r\n    ) {\r\n      search(\r\n        query: $repositoryName\r\n        first: $limit\r\n        after: $after\r\n        type: REPOSITORY\r\n      ) {\r\n        pageInfo {\r\n          hasNextPage\r\n          endCursor\r\n        }\r\n        repositoryCount\r\n        edges {\r\n          node {\r\n            ... on Repository {\r\n              owner {\r\n                avatarUrl\r\n                login\r\n              }\r\n              primaryLanguage {\r\n                name\r\n              }\r\n              languages(first: 5) {\r\n                nodes {\r\n                  name\r\n                }\r\n              }\r\n              name\r\n              url\r\n              description              \r\n              stargazerCount\r\n              updatedAt\r\n              openGraphImageUrl\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `,\r\n};","import React from \"react\";\r\nimport Button from '../../commonComponents/button/Button';\r\nimport { CMS } from '../../cms/CMS';\r\n\r\nconst HandleMore = ({moreItems, isNextPageExists}) => {\r\n    return ( \r\n        <React.Fragment>\r\n            {isNextPageExists && (\r\n                <div>\r\n                    <Button \r\n                        events={moreItems}\r\n                        data={{\r\n                            text:CMS.loadMoreRepos,\r\n                            theme:\"light\"\r\n                        }}\r\n                        options={{\r\n                            buttonSize:\"big\"\r\n                        }}\r\n                    />\r\n                </div>\r\n            )}\r\n        </React.Fragment>\r\n     );\r\n}\r\n\r\nexport default HandleMore;","import React from \"react\";\r\nimport \"./Header.scss\";\r\nimport { CMS } from '../../cms/CMS';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1 className=\"header__title\">{CMS.searchRepos}</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;","import React, { useState } from \"react\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nimport \"./SearchPage.scss\";\r\nimport Button from \"../../commonComponents/button/Button\";\r\nimport ReposList from \"../../components/searchResultsContainer/ReposList\";\r\nimport Spinner from \"../../commonComponents/spinner/Spinner\";\r\nimport SearchInput from \"../../components/search/SearchInput\";\r\nimport ErrorMessaging from \"../../commonComponents/ErrorMessaging/ErrorMessaging\";\r\nimport { Queries } from '../../queries/Queries';\r\nimport HandleMore from \"../../components/handleMore/HandleMore\";\r\nimport Header from \"../../components/header/Header\";\r\nimport * as Utils from \"../../UtilityFunctions/Utils\";\r\nconst SearchPage = () => {\r\n  const [searchText, setSearchText] = useState(\"rest-api\");\r\n  const [searchLimit, setsearchLimit] = useState(5);\r\n  const { loading, error, data, fetchMore } = useQuery(Queries.GET_REPOSITORIES, {\r\n    variables: { repositoryName: searchText, limit: searchLimit },\r\n  });\r\n\r\n  const handleSearch = (str) => {\r\n    setSearchText(str);\r\n    return Utils.handleInputSearch(fetchMore, str, searchLimit);\r\n  };\r\n\r\n  const handleMoreRepos = () => {\r\n    return Utils.handlefetchMoreRepos(fetchMore, searchText, searchLimit, data.search.pageInfo.endCursor);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-page\">\r\n      <Header />\r\n      {loading && <Spinner />}\r\n      {error && <ErrorMessaging error={error} />}\r\n      {!loading && <SearchInput onSearch={handleSearch} />}\r\n      {data && data.search.edges.length > 0 ? (\r\n        <>\r\n          <ReposList\r\n            list={data.search.edges}\r\n          />\r\n          <HandleMore\r\n            moreItems={handleMoreRepos}\r\n            isNextPageExists={data.search.pageInfo.hasNextPage}\r\n          />\r\n        </>\r\n      ) :\r\n      (\r\n        <ErrorMessaging error=\"0 results found, try again!\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n","export const handleInputSearch = (fetchMore, str, searchLimit) => {\r\n  fetchMore({\r\n    variables: {\r\n      repositoryName: str,\r\n      limit: searchLimit,\r\n    },\r\n    updateQuery: (prev, { fetchMoreResult }) => {\r\n      if (!fetchMoreResult) return prev;\r\n      return fetchMoreResult;\r\n    },\r\n  });\r\n};\r\nexport const handlefetchMoreRepos = (fetchMore, str, searchLimit, afterpoint) => {\r\n  fetchMore({\r\n    variables: {\r\n      repositoryName: str,\r\n      after: afterpoint,\r\n      limit: searchLimit,\r\n    },\r\n    updateQuery: (prev, { fetchMoreResult }) => {\r\n      if (!fetchMoreResult) return prev;\r\n      return Object.assign({}, prev, {\r\n        ...fetchMoreResult,\r\n        search: {\r\n          ...fetchMoreResult.search,\r\n          edges: [...prev.search.edges, ...fetchMoreResult.search.edges],\r\n        },\r\n      });\r\n    },\r\n  });\r\n};","import SearchPage from './pages/searchPage/SearchPage'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <SearchPage />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export const Constants = {\r\n    GITHUB_API: `https://api.github.com/graphql`,\r\n    BEARER_TOKEN: `3a6a2880c09d68d3288e23e1763b6f6a399fe50f`,\r\n};","import { ApolloClient, HttpLink, ApolloLink, InMemoryCache, from } from '@apollo/client';\r\nimport { Constants } from '../constants/Constants';\r\n\r\n//https://www.apollographql.com/docs/react/networking/advanced-http-networking/\r\n\r\nconst httpLink = new HttpLink({ uri: Constants.GITHUB_API });\r\n\r\nconst authMiddleware = new ApolloLink((operation, forward) => {\r\n  // add the authorization to the headers\r\n  operation.setContext(({ headers = {} }) => ({\r\n    headers: {\r\n      ...headers,\r\n      authorization: `bearer ${Constants.BEARER_TOKEN}`,\r\n    }\r\n  }));\r\n\r\n  return forward(operation);\r\n})\r\n\r\nconst client = new ApolloClient({\r\n  cache: new InMemoryCache(),\r\n  link: from([\r\n    authMiddleware,\r\n    httpLink\r\n  ]),\r\n});\r\n\r\nexport default client;\r\n","import React from \"react\";\r\n\r\nexport default class ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { error: null, errorInfo: null };\r\n    }\r\n    \r\n    static getDerivedStateFromError(error, errorInfo) {\r\n        // Update state so the next render will show the fallback UI.\r\n        this.setState({\r\n            error: error,\r\n            errorInfo: errorInfo\r\n        });\r\n        return null;\r\n    }\r\n    componentDidCatch(error, errorInfo) {\r\n      // Catch errors in any components below and re-render with error message\r\n      this.setState({\r\n        error: error,\r\n        errorInfo: errorInfo\r\n      })\r\n      // You can also log error messages to an error reporting service here\r\n    }\r\n    \r\n    render() {\r\n      if (this.state.errorInfo) {\r\n        // Error path\r\n        return (\r\n          <div>\r\n            <h2>Something went wrong.</h2>\r\n            <details style={{ whiteSpace: 'pre-wrap' }}>\r\n              {this.state.error && this.state.error.toString()}\r\n              <br />\r\n              {this.state.errorInfo.componentStack}\r\n            </details>\r\n          </div>\r\n        );\r\n      }\r\n      // Normally, just render children\r\n      return this.props.children;\r\n    }  \r\n  }","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport { ApolloProvider } from \"@apollo/client\";\r\nimport client from './api/Auth';\r\nimport ErrorBoundary from './UtilityFunctions/ErrorBoundary';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ErrorBoundary>\r\n      <ApolloProvider client={client}>\r\n        <App />\r\n      </ApolloProvider>\r\n    </ErrorBoundary>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}